% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SeqPlot.R
\name{SeqGene}
\alias{SeqGene}
\title{SeqGene R6 Class}
\description{
R6 class for plotting genes with exonâ€“intron structures in the SeqPlot
framework. Each gene is drawn as a backbone line with exons as boxes,
directional arrows along the backbone, and an optional gene label.
}
\details{
`SeqGene` is designed for displaying annotated genes from a `GRanges`
input containing exon ranges. Exons are grouped by gene ID (specified
with `geneCol`) and arranged into non-overlapping tiers within each
track window. Strand information (from `strandCol` or `strand()`) is
used to orient arrowheads along the backbone. Labels and exon boxes
are automatically scaled to the track coordinate system. Colors can
be assigned globally (`color`) or per-gene (`colorCol`).
}
\examples{
library(GenomicRanges)
gr <- GRanges(
  seqnames = "chr1",
  ranges   = IRanges(c(100, 200, 400), width = 50),
  gene_id  = c("GENE1", "GENE1", "GENE2"),
  strand   = c("+", "+", "-")
)
gene_plot <- SeqGene$new(gr, geneCol = "gene_id", strandCol = "strand")
# gene_plot$prep(layout_track, track_windows)
# gene_plot$draw()

}
\section{Super class}{
\code{\link[THEfunc:SeqElement]{THEfunc::SeqElement}} -> \code{SeqGene}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{gr}}{A `GRanges` object containing exons with metadata.}

\item{\code{geneCol}}{Character scalar naming the metadata column used
to group exons by gene (default `"gene_name"`).}

\item{\code{genesFilter}}{Optional character vector of gene IDs to keep.}

\item{\code{strandCol}}{Optional column name giving strand orientation
(`"+"` or `"-"`) per gene. Defaults to `strand(gr)`.}

\item{\code{color}}{Default fill/line color for genes (if `colorCol` not used).}

\item{\code{colorCol}}{Optional column name giving per-gene colors.}

\item{\code{shape}}{Shape used for exons (currently `"rect"`).}

\item{\code{label_pad}}{Minimum padding (in bp) around genes to avoid
overlapping labels. Default `50000`.}

\item{\code{exon_height}}{Proportion of tier height allocated to exon boxes.}

\item{\code{arrow_spacing}}{Spacing between directional arrows (in bp).}

\item{\code{arrow_len}}{Arrow shaft length (in bp).}

\item{\code{label_cex}}{Expansion factor for gene label text. Default `0.6`.}

\item{\code{label_offset}}{Offset for label placement (in npc units).}

\item{\code{coordCanvas}}{Data frame of canvas coordinates built in `prep()`.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SeqGene-new}{\code{SeqGene$new()}}
\item \href{#method-SeqGene-prep}{\code{SeqGene$prep()}}
\item \href{#method-SeqGene-draw}{\code{SeqGene$draw()}}
\item \href{#method-SeqGene-clone}{\code{SeqGene$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqGene-new"></a>}}
\if{latex}{\out{\hypertarget{method-SeqGene-new}{}}}
\subsection{Method \code{new()}}{
Create a new `SeqGene` object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqGene$new(
  gr,
  geneCol = "gene_name",
  genesFilter = NULL,
  strandCol = NULL,
  color = "gray30",
  colorCol = NULL,
  shape = "rect"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{gr}}{A `GRanges` object of exons with metadata columns for
gene ID and (optionally) strand.}

\item{\code{geneCol}}{Metadata column giving the gene ID (default `"gene_name"`).}

\item{\code{genesFilter}}{Optional vector of gene IDs to keep.}

\item{\code{strandCol}}{Optional metadata column for strand orientation.}

\item{\code{color}}{Default color if no `colorCol` is provided.}

\item{\code{colorCol}}{Optional column for per-gene colors.}

\item{\code{shape}}{Shape for exon boxes (`"rect"` by default).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SeqGene` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqGene-prep"></a>}}
\if{latex}{\out{\hypertarget{method-SeqGene-prep}{}}}
\subsection{Method \code{prep()}}{
Prepare the canvas coordinates for plotting exons, backbones,
and labels within each track window.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqGene$prep(layout_track, track_windows)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layout_track}}{List of layout panels for this track.}

\item{\code{track_windows}}{A `GRanges` object of genomic windows.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Populates `coordCanvas` with per-exon coordinates.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqGene-draw"></a>}}
\if{latex}{\out{\hypertarget{method-SeqGene-draw}{}}}
\subsection{Method \code{draw()}}{
Draw gene backbones, exons, directional arrows, and labels
using the coordinates from `prep()`.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqGene$draw()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Draws gene structures into the active grid viewport.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqGene-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SeqGene-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqGene$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
