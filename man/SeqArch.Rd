% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SeqPlot.R
\name{SeqArch}
\alias{SeqArch}
\title{SeqArch R6 Class}
\description{
R6 class for drawing arch-style links between genomic loci in the SeqPlot
framework. Inherits from [SeqLink].
}
\details{
`SeqArch` connects pairs of genomic intervals (`gr1`, `gr2`) with curved
arches that can span within or across tracks. Heights can be fixed or taken
from a metadata column (`yCol`). Stubs are supported for links where only
one endpoint lies within a visible window. Aesthetics control the colors
and widths of stems, arches, and stubs.
}
\examples{
gr1 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(10, 50), width = 1))
gr2 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(100, 150), width = 1))
arch <- SeqArch$new(gr1, gr2, t0 = 1, t1 = 1, height = 0.5)
# arch$prep(layout_all_tracks = some_layout, track_windows_list = some_windows, arc_track_idx = 1)
# arch$draw()

}
\section{Super classes}{
\code{\link[THEfunc:SeqElement]{THEfunc::SeqElement}} -> \code{\link[THEfunc:SeqLink]{THEfunc::SeqLink}} -> \code{SeqArch}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{yCol}}{Optional column name in `gr1` to set per-link arch height.}

\item{\code{height}}{Numeric vector of arch heights (constant or from `yCol`).}

\item{\code{curve}}{Character vector controlling curvature type, e.g. `"length"`
(scale with span) or `"equal"` (uniform).}

\item{\code{left_only}}{Integer indices of links with only the left end visible.}

\item{\code{right_only}}{Integer indices of links with only the right end visible.}

\item{\code{stubs}}{List of stub objects representing partial arches.}

\item{\code{aesthetics}}{List of aesthetics controlling stem/arch appearance:
\itemize{
  \item stemColor — color of link stems
  \item arcColor — color of arches
  \item stemWidth — line width of stems
  \item arcWidth — line width of arches
  \item stubAngle — angle of stub hooks (degrees)
  \item stubLength — length of stub hooks (NPC units)
  \item plotStubs — logical; whether to draw stubs
}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SeqArch-new}{\code{SeqArch$new()}}
\item \href{#method-SeqArch-prep}{\code{SeqArch$prep()}}
\item \href{#method-SeqArch-draw}{\code{SeqArch$draw()}}
\item \href{#method-SeqArch-clone}{\code{SeqArch$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqArch-new"></a>}}
\if{latex}{\out{\hypertarget{method-SeqArch-new}{}}}
\subsection{Method \code{new()}}{
Create a new `SeqArch` object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqArch$new(
  gr1,
  gr2,
  t0 = 0,
  t1 = 0,
  y0 = 0,
  y1 = 0,
  yCol = NULL,
  orientation = "*",
  height = 1,
  curve = "length",
  aesthetics = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{gr1}}{A `GRanges` object giving start positions of links.}

\item{\code{gr2}}{A `GRanges` object giving end positions of links.}

\item{\code{t0}}{Integer or vector giving track indices for start loci (default: `0`).}

\item{\code{t1}}{Integer or vector giving track indices for end loci (default: `0`).}

\item{\code{y0}}{Numeric or vector giving vertical start positions (default: `0`).}

\item{\code{y1}}{Numeric or vector giving vertical end positions (default: `0`).}

\item{\code{yCol}}{Optional column name in `gr1` used to determine arch height.}

\item{\code{orientation}}{Character or vector specifying link orientation (default: `"*"`).}

\item{\code{height}}{Numeric scalar default height if `yCol` not used.}

\item{\code{curve}}{Character or vector specifying curvature mode (`"length"`, `"equal"`, or numeric).}

\item{\code{aesthetics}}{List of aesthetics for stems, arches, and stubs.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SeqArch` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqArch-prep"></a>}}
\if{latex}{\out{\hypertarget{method-SeqArch-prep}{}}}
\subsection{Method \code{prep()}}{
Prepare arch coordinates and stubs for drawing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqArch$prep(layout_all_tracks, track_windows_list, arc_track_idx)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{layout_all_tracks}}{A nested list of panel layouts for all tracks.}

\item{\code{track_windows_list}}{A list of `GRanges` objects defining genomic windows per track.}

\item{\code{arc_track_idx}}{Integer index of the track where arches should be drawn.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqArch-draw"></a>}}
\if{latex}{\out{\hypertarget{method-SeqArch-draw}{}}}
\subsection{Method \code{draw()}}{
Draw arches and stubs onto the plotting canvas.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqArch$draw()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqArch-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SeqArch-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqArch$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
